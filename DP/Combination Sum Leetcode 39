class Solution {
public:
    vector<vector<int>> ans;
    int n;
    void help(vector<int> &candidates,vector<int> &temp, int targ, int index){
        if(index==n){
            if(targ == 0) ans.push_back(temp);
            return;
        }
        if(targ<=0){
            if(targ==0) ans.push_back(temp);
            return;
        }
        //skip
        help(candidates, temp, targ, index+1);
        //take
        temp.push_back(candidates[index]);
        help(candidates, temp, targ-candidates[index], index);
        temp.pop_back();
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        n = candidates.size();
        vector<int> temp;
        help(candidates, temp, target, 0); //array, targetremaining, currindex
        return ans;
    }
};
